1. 리액트 스타일링 방법
1.1 전통적인 방법으로 스타일링
1.1.1 인라인 스타일 - 
1.1.2 글로벌(외부) 스타일 - 외부에 글로벌로 영향을 미치는 CSS파일을 이용하는 방법. 모든 컴포넌트에 영향을 미친다
1.1.3 CSS 모듈(+ classnames 패키지): 특정 컴포넌트에만 css를 적용하는 방법이다. 파일 형식은 (파일명).module.css이다. 해당 파일을 불러온 컴포넌트에만 영향을 미친다. 복수 컴포넌트에서 사용은 가능하지만 그렇게 사용하지는 않는다.

1.2 CSS-IN-JS 방법
1.2.1 styled-components💅 - styled-components의 styled를 임포트해와서 쓰는 형태. CSS 스타일을 지정할 때 내가 원하는 이름으로 지정하며 사용할 수 있지만, 직관적인 편은 아니다.
1.2.2 emotion
1.2.3 Vanilla Extract(최근 떠오르는 방법)

1.3 Tainwind CSS
1.3.1 단독 유틸리티 퍼스트 CSS 라이브러리

1.4 그 외
1.4.1 이미지 렌더링
1.4.2 폰트 적용

CSS-IN-JS란?
자바스크립트 파일 안에서 CSS를 작성하는 방법이며, 한때 리액트에서 유행했던 방법이다.

2. 컴포넌트 트리
2.1 컴포넌트가 불러와지는 구조를 컴포넌트 트리라고 한다. DOM트리와 구조가 상당히 비슷하다.
2.1.1 컴포넌트 트리에서 컴포넌트는 컴포넌트 관계를 맺으며 컴포넌트 트리에서 관계는 부모-자식 관계밖에 없다.
2.1.2 이번 강의에서 사용된 예제는 최상위 루트 컴포넌트인 APP컴포넌트로부터 컴포넌트들이 뻗어나온다.
2.1.2.1 최상위 컴포넌트는 반드시 하나여야 되는 것은 아니지만, 유지보수를 편리하게 하기 위해서는 최상위 컴포넌트를 단일 컴포넌트로 사용하는 것을 권장한다.

2.2 컴포넌트에서 글로벌 CSS가 임포트 될때는 최하위 컴포넌트에 임포트가 되어도 전체 컴포넌트에 영향을 끼친다.

3. JSX
3.1 JSX는 JavaScript + XML인 확장 문법인데, 개발사인 META에서 리액트를 위해 개발한 문법이다.
3.1.1 JSX는 HTML과 굉장히 유사하다.

4. JSX의 요소
4.1 무조건 하나의 루트 요소만 반환해야 한다. 중복된 루트 요소를 사용할 경우 오류가 발생한다.
4.2 모든 태그는 닫아줘야 한다. 빈 태그(br, link 등)도 닫아줘야 한다.
4.3 모든 태그의 속성은 카멜 케이스로 사용해야 한다.
4.3.1 예약된 속성명은 사용할 수 없다.
4.4 표현식은 중괄호 안에서만 사용할 수 있다.
4.5 인라인 스타일은 객체로 작성한다.
4.6 HMR(Hot Module Reload)으로 내용을 수정할 때 마다 변경사항이 자동으로 적용된다. 하지만 가끔 수동으로 새로고침을 해줘야 할 때도 있다.

5. 컴포넌트: 함수에서 JSX를 반환하면 컴포넌트이다.
5.1 컴포넌트는 소문자로 작성하게 되면 HTML의 태그와 구분하지 못하기 때문에 파스칼 케이스로 작성해줘야 한다
5.2 컴포넌트는 일반적으로 하나의 파일에 작성한다.
5.3 함수에 export를 붙이면 다른 곳에서 함수를 사용할 수 있지만, 유지보수를 하기가 어려워진다.
5.4 리액트에서 App 컴포넌트를 제외한 다른 컴포넌트는 components 폴더에 만드는 것이 일반적이다.
5.4.1 components 폴더는 반드시 src 폴더 내부에 있어야 한다.
5.4.2 글로벌 스타일 CSS파일은 main, App 어디에 하던 상관 없이 화면에 렌더링되는 컴포넌트에 영향을 주지만, 추후 유지보수의 편리함을 위해 App.tsx에 지정하는 편이 좋다.
5.5 컴포넌트를 여러개 반환할 때는 반드시 하나로 묶어주어야 한다.
5.6 main의 reder에서는 JSX를 반환하는 것이 아니기 때문에 main은 컴포넌트로 볼 수 없다.

6. 화살표 함수에서는 JSX 문법을 즉시 반환한다.

7. 불러올 CSS파일명이 소문자여도 import할 때 컴포넌트명을 대문자로 하면 문제가 없다.

8. classNames 라이브러리
8.1 classNames를 사용하여 CSS모듈을 import할 때는 bind를 사용하지만 그 이외에는 사용하지 않는다.
8.1 CSS에 지정한 타입이 false면 적용되지 않고 true면 적용되게 할수도 있음.

9. 두 단어 이상의 속성은 카멜케이스로 작성한다.




※ package에는 종속성 패키지와 개발 종속성 패키지가 있는데, 개발 종속성 패키지는 개발 모드에서만 필요하다.
- 과거에는 패키지 위치가 잘못되면 실제로 오류가 났다.
- 번들러: 웹팩, 롤업

문제가 발생하지 않도록 공식 문서에 나와있는 대로만 설치하면 된다.
devDependencies에 설치되는 명령어: -d--save, -D
