/*
  1. 리액트 스타일링 방법

  1.1 전통적인 방법으로 스타일링 하기
  1.1.1 인라인 스타일
  1.1.2 글로벌(외부) 스타일
  1.1.3 CSS 모듈 (+ classnames 패키지)

  1.2 CSS-IN-JS 방법으로 스타일링 하기
  1.2.1 styled-components

  1.2.2 emotion
  1.2.2.1 CSS를 런타임에 생성함
  1.2.2.2 초기 로딩에 대한 오버헤드가 큼

  1.2.3 Vanilla Extract (타입스크립트 완벽 지원 + 제로 런타임)

  1.3 Tailwind CSS 방법으로 스타일링 하기
  1.3.1 단독 유틸리티 퍼스트 CSS 라이브러리

  1.4 그 외
  1.4.1 이미지 렌더링하기
  1.4.1.1 public -> 정적 리소스 (파비콘, robots.txt, 구글 애널리틱스 인증 파일, 네이버 콘솔 인증 파일)
  1.4.1.2 src -> 동적 리소스 (대부분의 이미지는 src 폴더에 넣는 게 좋음)
  1.4.1.3 번들링 -> 리소스를 최적화해줌. (압축, 캐시)

  1.4.2 폰트 적용하기
*/

/*
  Semantic Versioning -> Semver

  Major.Minor.Patch

  Major -> 기존 버전과 호환되지 않는 큰 변경사항이 생겼을 때
  Minor -> 기능이 새롭게 추가되었지만, 기존과 호환이 가능할 때
  Patch -> 버그 수정과 같은 사소한 변경이 발생했을 때, 그리고 기존과 호환이 매우 양호할 때

  React 18.3.2 -> 19.0.0
  -> 총 3번의 기능 추가와 2번의 버전 수정이 발생했다고 볼 수 있음.
  -> 18.3 버전에서 2번 고쳤다는 의미.

  Minor 버전이 바뀐 건 새로운 기능이 추가되었다는 뜻이므로 확인해볼 필요가 있음.
  Major 버전이 0인 건 정식 버전이 아닌 베타 버전이라는 뜻임. (정식 출시 x)
*/
