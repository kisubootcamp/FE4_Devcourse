/* 1. 피보나치 수열 계산 */
//피보나치 수열의 특정 항까지 계산하는 예제입니다.
// **문제**: 주어진 정수 N에 대해, 피보나치 수열의 처음 N항을 출력하는 프로그램을 작성하시오.
// **입력**: N (정수, 1 이상)
// **출력**: 피보나치 수열의 처음 N항을 배열로 출력.
// **설명**: 피보나치 수열은 앞의 두 수의 합으로 다음 수를 생성하는 수열이다. 첫 두 항은 0과 1이다.
{
    let n = 10; // 원하는 항의 수
    result = [0, 1];

    // 피포나치 수열 로직
    for (let i = 2; i < n; i++) {
        result.push(result[i-2] + result[i-1]);
    }

    console.log(`피보나치 수열(${n}항):`, result); //[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
}

/* 2. 소수 찾기 */
// **문제**: 1부터 100까지의 소수를 찾아 출력하는 프로그램을 작성하시오.
// **입력**: 없음
// **출력**: 1부터 100까지의 소수를 배열로 출력.
// **설명**: 소수는 1과 자신만을 약수로 가지는 자연수이다. 이 프로그램은 2부터 100까지의 숫자 중 소수를 찾는다.
{
    let start = 1, end = 100; // 범위
    let results = [];

    // 소수 찾기 로직
    for (let i = start + 1; i <= end; i++) {
        for (let j = 2; j <= i; j++) {
            if (j === i) {
                results.push(i);
            }
            if (i % j === 0) {
                break; 
            }
        }
    }

    console.log(results); // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
}

/* 3. 배열 요소의 합 구하기 */
// **문제**: 주어진 숫자 배열의 모든 요소의 합을 계산하는 프로그램을 작성하시오.
// **입력**: `numbers` (배열, 예: `[5, 10, 15, 20, 25]`)
// **출력**: 배열 요소의 합. (예: 75)
// **설명**: 이 프로그램은 배열의 각 요소를 순회하며 합을 계산한다.
{
    const numbers = [5, 10, 15, 20, 25]; // 배열
    let results = 0;

    // 합 계산 로직
    for (num of numbers) {
        results += num;
    }

    console.log(results); // 75
}

/* 4. 문자열 뒤집기 */
// **문제**: 주어진 문자열을 뒤집어서 출력하는 프로그램을 작성하시오.
// **입력**: `str` (문자열, 예: `"Hello, World!"`)
// **출력**: 뒤집힌 문자열. (예: `"!dlroW ,olleH"`)
// **설명**: 문자열을 끝에서부터 시작하여 차례로 각 문자를 추가하여 새로운 문자열을 만든다
{
    const str = "Hello, World!";
    let reversed = "";

    // 문자열 뒤집기 로직
    for (char of str) {
        reversed = char + reversed;
    }

    console.log("뒤집힌 문자열:", reversed); // "!dlroW ,olleH"
}

/* 5. 특정 숫자까지의 곱 계산 */
// **문제**: 주어진 정수 N의 팩토리얼을 계산하는 프로그램을 작성하시오.
// **입력**: N (정수, 1 이상)
// **출력**: N의 팩토리얼.
// **설명**: 팩토리얼은 1부터 N까지의 모든 정수를 곱한 결과이다. 이 프로그램은 N까지 반복하여 곱을 계산한다.
{
    let n = 5; // 예시 숫자
    let factorial = 1;

    // 팩토리얼 로직
    for (let i = 1; i <= n; i++) {
        factorial *= i;
    }

    console.log(`${n}의 팩토리얼:`, factorial); // 출력 120
}

/* 6. 암스트롱수 */
// **문제**: 100부터 999까지의 세 자리 정수 중 암스트롱 수를 구해서 출력하세요.
// **입력**: 없음
// **출력**: 153, 370, 371, 407
// 암스트롱의 수는 세 자리의 정수 중에서 각 자리의 수를 세 제곱한 수의 합과 자신이 같은 수를 말합니다. 
// 예를 들어 153 = 1 + 125 + 27 입니다. 
{
    for (let i = 100; i <= 999; i++) {
        let numStr = i.toString();
        if (i === (+numStr[0])**3 + (+numStr[1])**3 + (+numStr[2])**3) {
            console.log(i);
        }
    }
}